/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "laminar_flow/system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application	      simpleFoam;

startFrom         startTime;

startTime         0;

stopAt            endTime;

endTime           1000;//5e-4

deltaT            1;//5e-12

writeControl      timeStep;

writeInterval     50;//500000

purgeWrite        3;//last timeSteps with value are ratined & `0` for all.

writeFormat       binary;//change to `binary` if weird problem occurs

writePrecision    6;//default 6, previously 7

writeCompression  off;

timeFormat        general;

timePrecision     6;

runTimeModifiable true;

// adjustTimeStep  yes;
//
// maxCo           0.2;

functions
{
	// #includeFunc	  residuals
    // #includeFunc	  streamlines
    // forceCoeffs1
    // {
    //     type forceCoeffs;
    //     functionObjectLibs ( "libforces.so" );
    //     patches     ( "ahmed_body*" );
    //     pName       p;
    //     UName       U;
    //     // rhoName     rhoInf;// Indicates incompressible
    //     log         true;
    //     // rhoInf      1;// Redundant for incompressible
    //     liftDir     (0 0 1);
    //     dragDir     (1 0 0);
    //     CofR        (0.72 0 0); // Axle midpoint on ground (0 1 0);
    //     pitchAxis   (0 1 0);
    //     magUInf 40;
    //     lRef 1.45;// Wheelbase length
    //     Aref 2.618;// Estimated
    // }
    wallShearStress
    {
        type                wallShearStress;
        libs                ("libfieldFunctionObjects.so");
        patches             ("lowerNozzleWall");
        writeControl        timeStep;
        // writeInterval       50;
        // outputInterval      1;
        // log                 yes;
    }}


// ************************************************************************* //
