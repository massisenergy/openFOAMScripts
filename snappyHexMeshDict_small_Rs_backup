/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

// * * * * * * * * * * * * * * * * * Reference * * * * * * * * * * * * * * * //
https://www.cfd-online.com/Forums/openfoam-meshing/103513-snappyhexmesh-internal-flow-example-diesel-injector.html
https://www.youtube.com/watch?v=ICJxysKTnVw&list=PLoISy5hD0gTz07HSnvhhy54ZysJiaQc3I&index=5
https://holzmann-cfd.com/en/openfoam/tutorials/the-collection/item/15-2d-rotational-axis-symmetric-meshing

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh on;
snap            on;//off;//
addLayers       off;

geometry
{
    // Extrude_blunted.stl//previously used
    Blunted_nozzle//this is the name of the file to be created
    {
        type triSurfaceMesh;//content type of the file mentined in the next line
        file "Extrude_blunted.stl";//input file in .stl or .obj format
        // regions//not mandatory
        // {
        //    // <inletPatch>  { name inlet; }
        //     inlet         { name inlet; }
        //     outlet        { name outlet; }
        //     nozzleWall    { name nozzleWall; }
        //     axis          { name axis; }
        //     front         { name front; }
        //     back          { name back; }
        // }
    }
};

castellatedMeshControls //Settings for the castellatedMesh generation.
{
    nCellsBetweenLevels 2;// this value defines the level of refinement (e.g.
    // from level 0 to level 2). 1 means normal 2:1 refinement restriction,
    // larger means slower refinement.
    // NOTE: should be value `x` if `level (x x)` in `refinementSurfaces`

    features //Specifies a level for any cell intersected by its edges.
    //This is a featureEdgeMesh, read from constant/triSurface for now.
    (
      {file "Extrude_blunted.eMesh";
      level 2;}//previously 0, default 2
    );//not mandatory

    //Surface based refinement
    // Specifies two levels for every surface. The first is the minimum level,
    // every cell intersecting a surface gets refined up to the minimum level.
    // The second level is the maximum level. Cells that 'see' multiple
    // intersections where the intersections make an
    // angle > resolveFeatureAngle get refined up to the maximum level.
    refinementSurfaces
    {
        Blunted_nozzle//same name as given in geometry (`part?` to be created)
        // Extrude_blunted.stl//previously used
        {
            level (1 1);//refinding the surfaces at level 2, where
            // level 0 is the base mesh, (1 1) works for small Rs
            // patchInfo { type wall; }
            // regions//not mandatory
            //   {
            //     inlet       { level (0 0); patchInfo { type patch; }}
            //     outlet      { level (0 0); patchInfo { type patch; }}
            //     nozzleWall  { level (0 0); patchInfo { type patch; }}
            //     axis        { level (0 0); patchInfo { type wall; }}
            //     front       { level (0 0); patchInfo { type patch; }}
            //     back        { level (0 0); patchInfo { type patch; }}
            //    // <Patch> {level (2 2); patchInfo {type patch; inGroups (inlet); }
            //   }
         }
    }

    resolveFeatureAngle 55;  //Resolve sharp angles, previously 55, 30,
    // default 30

    refinementRegions
    {
//        CAD//not mandatory
//        {
//            mode inside;
//            levels ((1E15 2));
//        }
    }

    // After refinement patches get added for all refinementSurfaces and
    // all cells intersecting the surfaces get put into these patches. The
    // section reachable from the locationInMesh is kept.
    // NOTE: This point should never be on a face, always inside a cell, even
    // after refinement.
    locationInMesh (0.001 .1 0.0005); // Offset from (0 0 0) to avoid
                                     // coinciding with face or edge
    //Make sure the location in the mesh is defined to be within the geometry
    //compare with the bounding boxes of the .stl & the blockMesh
}

snapControls //Settings for the snapping.
{
     // explicitFeatureSnap    true;//Use castellatedMeshControls::features
     // // (default = true)
     // implicitFeatureSnap    false;//this is true by default if previous &
     // // this line are commented out
     // multiRegionFeatureSnap false;//Detect points on multiple surfaces (only
     // // for explicitFeatureSnap)
     // nFeatureSnapIter       10;//Number of feature edge snapping iterations.
     // nSmoothPatch 3;//- Number of patch smoothing iterations before
     // // finding correspondence to surface
     // tolerance 2.0;// Relative distance for points to be attracted by
     // // surface feature point or edge. True distance is this factor
     // // times local maximum edge length.
     // // previously 2.0, 0.5, 0.1, 4.0
     // nSolveIter 130;// Number of mesh displacement relaxation iterations.
     // //previously 130, 200,
     // nRelaxIter 5;//Maximum number of snapping relaxation iterations. Should stop
     // // before upon reaching a correct mesh.
}

addLayersControls // Settings for the layer addition.
{
    layers
    {
      "Blunted_nozzle"//same name as in geometry (`part?` to be created)
      // "Blunted_nozzle.*"//same name as in geometry (file to be created)
        {
            nSurfaceLayers 0;//2
        }
    }

    relativeSizes       true; // Are the thickness parameters below
    // relative to the undistorted size of the refined cell outside
    // layer (true) or absolute sizes (false).

    expansionRatio      1.0; // Expansion factor for layer mesh
    finalLayerThickness 0.5; // Wanted thickness of final added cell
        // layer. If multiple layers is the thickness of the
        // layer furthest away from the wall. Relative to undistorted
        // size of cell outside layer. This is the thickness of the
        // layer furthest away from the wall. See relativeSizes parameter.
    minThickness        1e-3; // Minimum thickness of cell layer. If
    // for any reason layer cannot be above minThickness do not add layer.
    // Relative to undistorted size of cell outside layer.
    nGrow               0; // If points get not extruded do nGrow layers
    // of connected faces that are also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 60;

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 3;

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 1;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5; // Stop layer growth on highly warped cells
    maxThicknessToMedialRatio 0.3; // Reduce layer growth where ratio
    // thickness to medial distance is large

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle 90;

    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;

    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;
}

// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minFlatness 0.5;
    minVol 1e-13;
    minTetQuality 1e-9;
    minArea -1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.02;
    minVolRatio 0.01;
    minTriangleTwist -1;



    // Advanced


    //- Number of error distribution iterations
    nSmoothScale 4;
    //- amount to scale back displacement at error points
    errorReduction 0.75;
}


// Advanced

debug 0;

writeFlags
(
    // scalarLevels    //write volScalarField with cellLevel for postprocessing
    layerSets       // write cellSets, faceSets of faces in layer
    layerFields     // write volScalarField for layer coverage
);

mergeTolerance 1e-6;

// ************************************************************************* //

